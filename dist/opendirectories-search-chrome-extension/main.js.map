{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/blacklist/blacklist.component.html","webpack:///./src/app/components/blacklist/blacklist.component.ts","webpack:///./src/app/components/new-blacklist/new-blacklist.component.html","webpack:///./src/app/components/new-blacklist/new-blacklist.component.ts","webpack:///./src/app/components/new-query-type/new-query-type.component.html","webpack:///./src/app/components/new-query-type/new-query-type.component.ts","webpack:///./src/app/components/query-builder/query-builder.component.html","webpack:///./src/app/components/query-builder/query-builder.component.ts","webpack:///./src/app/components/query-types/query-types.component.html","webpack:///./src/app/components/query-types/query-types.component.ts","webpack:///./src/app/components/saved-queries/saved-queries.component.html","webpack:///./src/app/components/saved-queries/saved-queries.component.ts","webpack:///./src/app/models/blacklist.ts","webpack:///./src/app/models/query-builder.ts","webpack:///./src/app/models/query-type.ts","webpack:///./src/app/models/query.ts","webpack:///./src/app/services/blacklist.service.ts","webpack:///./src/app/services/chrome-storage.service.ts","webpack:///./src/app/services/query-type.service.ts","webpack:///./src/app/services/saved-query.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { QueryBuilderComponent } from \"./components/query-builder/query-builder.component\";\nimport { BlacklistComponent } from \"./components/blacklist/blacklist.component\";\nimport { NewBlacklistComponent } from \"./components/new-blacklist/new-blacklist.component\";\nimport { QueryTypesComponent } from \"./components/query-types/query-types.component\";\nimport { NewQueryTypeComponent } from \"./components/new-query-type/new-query-type.component\";\nimport { SavedQueriesComponent } from \"./components/saved-queries/saved-queries.component\";\n\nconst routes: Routes = [\n  { path: \"settings/query-types\", component: QueryTypesComponent },\n  { path: \"settings/query-types/new\", component: NewQueryTypeComponent },\n  { path: \"settings/blacklist\", component: BlacklistComponent },\n  { path: \"settings/blacklist/new\", component: NewBlacklistComponent },\n  { path: \"settings/saved-queries\", component: SavedQueriesComponent },\n  { path: \"\", component: QueryBuilderComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'opendirectories-search-chrome-extension';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatButtonModule, MatToolbarModule, MatFormFieldModule, MatInputModule, MatIconModule, MatCardModule, MatSelectModule, MatCheckboxModule, MatMenuModule, MatListModule, MatSnackBarModule } from \"@angular/material\";\n\nimport { QueryBuilderComponent } from \"./components/query-builder/query-builder.component\";\nimport { BlacklistComponent } from \"./components/blacklist/blacklist.component\";\nimport { QueryTypesComponent } from \"./components/query-types/query-types.component\";\nimport { SavedQueriesComponent } from \"./components/saved-queries/saved-queries.component\";\nimport { NewBlacklistComponent } from './components/new-blacklist/new-blacklist.component';\nimport { NewQueryTypeComponent } from './components/new-query-type/new-query-type.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QueryBuilderComponent,\n    BlacklistComponent,\n    QueryTypesComponent,\n    SavedQueriesComponent,\n    NewBlacklistComponent,\n    NewQueryTypeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    MatButtonModule, MatToolbarModule, MatFormFieldModule, MatInputModule, MatIconModule, MatCardModule, MatSelectModule, MatCheckboxModule, MatMenuModule, MatListModule, MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button routerLink=\"/\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <span>Blacklist</span>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button routerLink=\"/settings/blacklist/new\">\n      <mat-icon>add_circle_outline</mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"padder\">\n  <mat-list dense>\n    <div *ngFor=\"let blacklist of list\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <h4 mat-line>{{blacklist.url}}</h4>\n      <button class=\"remove\" mat-icon-button *ngIf=\"!blacklist.isDefault\" (click)=\"remove(blacklist)\">\n        <mat-icon>delete_outline</mat-icon>\n      </button>      \n    </div>\n  </mat-list>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { Blacklist } from \"../../models/blacklist\";\nimport { BlacklistService } from \"../../services/blacklist.service\";\n\n@Component({\n  selector: \"app-blacklist\",\n  templateUrl: \"./blacklist.component.html\",\n  styleUrls: [\"./blacklist.component.sass\"]\n})\nexport class BlacklistComponent implements OnInit {\n  list: Array<Blacklist>;\n\n  constructor(\n    private blacklistService: BlacklistService\n  ) { }\n  \n  ngOnInit() {\n    this.loadAll();\n  }\n\n  private loadAll() {\n    this.blacklistService.all().subscribe(\n      (data) => {\n        this.list = data;\n      }\n    );\n  }\n\n  remove(blacklist: Blacklist) {\n    this.blacklistService.remove(blacklist).subscribe(\n      (data) => {\n        this.loadAll();\n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button routerLink=\"/settings/blacklist\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <span>New Blacklist</span>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button (click)=\"save()\">\n      <mat-icon>save</mat-icon>\n    </button>  \n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"padder\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"URL\" [(ngModel)]=\"url\">\n    </mat-form-field>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\nimport { BlacklistService } from \"../../services/blacklist.service\";\n\n@Component({\n  selector: 'app-new-blacklist',\n  templateUrl: './new-blacklist.component.html',\n  styleUrls: ['./new-blacklist.component.sass']\n})\nexport class NewBlacklistComponent implements OnInit {\n  url: string;\n  error: string;\n\n  constructor(\n    private router: Router,\n    private blacklistService: BlacklistService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  save() {\n    this.blacklistService.save(this.url).subscribe(\n      (result) => this.router.navigateByUrl(\"/settings/blacklist\"),\n      (error) => this.error = \"Something went wrong :(\"\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button routerLink=\"/settings/query-types\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <span>New Query Type</span>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button (click)=\"save()\">\n      <mat-icon>save</mat-icon>\n    </button>  \n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"padder\">\n  <div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"Label\" [(ngModel)]=\"label\">\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"Extensions (comma-separated)\" [(ngModel)]=\"extensions\">\n    </mat-form-field>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\nimport { QueryTypeService } from \"../../services/query-type.service\";\n\n@Component({\n  selector: 'app-new-query-type',\n  templateUrl: './new-query-type.component.html',\n  styleUrls: ['./new-query-type.component.sass']\n})\nexport class NewQueryTypeComponent implements OnInit {\n  label: string;\n  extensions: string;\n  error: string;\n\n  constructor(\n    private router: Router,\n    private queryTypeService: QueryTypeService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  save() {\n    this.queryTypeService.save(this.label, this.extensions.split(\",\")).subscribe(\n      (result) => this.router.navigateByUrl(\"/settings/query-types\"),\n      (error) => this.error = \"Something went wrong :(\"\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span>Opendirectories</span>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button routerLink=\"/settings/saved-queries\">\n      <mat-icon>save</mat-icon>\n    </button>    \n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon>settings</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item routerLink=\"/settings/query-types\">\n        <span>Query Types</span>\n      </button>\n      <button mat-menu-item routerLink=\"/settings/blacklist\">\n        <span>Blacklist</span>\n      </button>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div fxLayout=\"column\" id=\"query-builder\" class=\"padder\">\n  <!-- query -->\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" id=\"query\">\n    <mat-form-field [ngClass]=\"{buttoned: query.query}\">\n      <input matInput type=\"text\" placeholder=\"Query\" [(ngModel)]=\"query.query\" (keyup)=\"buildQuery()\" autofocus>\n      <button *ngIf=\"query.query\" mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clear()  \">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n    <button *ngIf=\"query.query\" mat-button mat-icon-button aria-label=\"Save\" (click)=\"save()\">\n      <mat-icon>save</mat-icon>\n    </button>\n    <button *ngIf=\"query.query\" mat-button mat-icon-button aria-label=\"Search\" (click)=\"search()\">\n      <mat-icon>search</mat-icon>\n    </button>\n  </div>\n  <!-- options -->\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" id=\"options\">\n    <mat-form-field>\n      <mat-label>Type</mat-label>\n      <mat-select [(value)]=\"query.queryType\" (selectionChange)=\"buildQuery()\">\n        <mat-option *ngFor=\"let type of queryTypes\" [value]=\"type\">\n          {{type.label}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-checkbox [(ngModel)]=\"query.alternative\" (change)=\"buildQuery()\">Alternative</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"query.quoted\" (change)=\"buildQuery()\">Quoted</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"query.incognito\" (change)=\"buildQuery()\">Incognito</mat-checkbox>\n  </div>\n  <mat-card class=\"example-card\" *ngIf=\"query.query\">\n    <mat-card-content>\n      {{query.humanReadable}}\n    </mat-card-content>\n  </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\nimport { QueryBuilder } from \"../../models/query-builder\";\nimport { QueryType } from \"../../models/query-type\";\nimport { Blacklist } from \"../../models/blacklist\";\nimport { Query } from \"../../models/query\";\n\nimport { BlacklistService } from \"../../services/blacklist.service\";\nimport { QueryTypeService } from \"../../services/query-type.service\";\nimport { SavedQueryService } from \"../../services/saved-query.service\";\n\n@Component({\n  selector: 'app-query-builder',\n  templateUrl: './query-builder.component.html',\n  styleUrls: ['./query-builder.component.sass']\n})\nexport class QueryBuilderComponent implements OnInit {\n  private blacklist: Array<Blacklist>;\n\n  query: Query = new Query();\n  queryTypes: Array<QueryType>;\n\n  error: string;\n\n  constructor(\n    private blacklistService: BlacklistService,\n    private queryTypeService: QueryTypeService,\n    private savedQueryService: SavedQueryService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.loadBlacklists();\n    this.loadQueryTypes();\n  }\n\n  clear() {\n    this.query.clear();\n  }\n\n  save() {\n    this.savedQueryService.save(this.query).subscribe(\n      (result) => {\n        this.router.navigateByUrl(\"/settings/saved-queries\")\n      },\n      (error) => this.error = \"Something went wrong :(\"\n    );\n  }\n\n  search() {\n    chrome.windows.create({\n      url: this.query.url,\n      incognito: this.query.incognito\n    });\n  }\n\n  buildQuery() {\n    this.query.build(this.blacklist);\n  }\n\n  private loadBlacklists() {\n    this.blacklistService.all().subscribe(\n      (data) => {\n        this.blacklist = data;\n      }\n    );\n  }\n\n  private loadQueryTypes() {\n    this.queryTypeService.all().subscribe(\n      (data) => {\n        this.queryTypes = data;\n      }\n    );\n    this.query.queryType = this.queryTypes[0];\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button routerLink=\"/\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <span>Query Types</span>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button routerLink=\"/settings/query-types/new\">\n      <mat-icon>add_circle_outline</mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"padder\">\n  <mat-list dense>\n    <div *ngFor=\"let queryType of list\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayout=\"column\">\n        <h4 mat-line>{{queryType.label}}</h4>\n        <small>({{queryType.extensions}})</small>\n      </div>\n      <button class=\"remove\" mat-icon-button *ngIf=\"!queryType.isDefault\" (click)=\"remove(queryType)\">\n        <mat-icon>delete_outline</mat-icon>\n      </button>      \n    </div>\n  </mat-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { QueryType } from \"../../models/query-type\";\nimport { QueryTypeService } from \"../../services/query-type.service\";\n\n@Component({\n  selector: 'app-query-types',\n  templateUrl: './query-types.component.html',\n  styleUrls: ['./query-types.component.sass']\n})\nexport class QueryTypesComponent implements OnInit {\n  list: Array<QueryType>;\n\n  constructor(\n    private queryTypeService: QueryTypeService\n  ) { }\n\n  ngOnInit() {\n    this.loadAll();\n  }\n\n  private loadAll() {\n    this.queryTypeService.all().subscribe(\n      (data) => {\n        this.list = data;\n      }\n    );\n  }\n\n  remove(queryType: QueryType) {\n    this.queryTypeService.remove(queryType).subscribe(\n      (data) => {\n        this.loadAll();\n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button routerLink=\"/\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <span>Saved Queries</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"padder\">\n  <mat-list dense>\n    <div *ngFor=\"let savedQuery of list\">\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <h4 mat-line>{{savedQuery.query}}</h4>\n          <p>\n            {{savedQuery.queryType.label}}\n          </p>\n        </div>\n        <div>\n          <button mat-icon-button (click)=\"load(savedQuery)\">\n            <mat-icon>arrow_downward</mat-icon>\n          </button>\n          <button mat-icon-button (click)=\"search(savedQuery)\">\n            <mat-icon>play_arrow</mat-icon>\n          </button>\n          <button class=\"remove\" mat-icon-button (click)=\"remove(savedQuery)\">\n            <mat-icon>delete_outline</mat-icon>\n          </button>\n        </div>\n      </div>\n      <mat-divider></mat-divider>\n    </div>\n  </mat-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Query } from \"../../models/query\";\nimport { SavedQueryService } from \"../../services/saved-query.service\";\nimport { BlacklistService } from \"../../services/blacklist.service\";\n\n@Component({\n  selector: 'app-saved-queries',\n  templateUrl: './saved-queries.component.html',\n  styleUrls: ['./saved-queries.component.sass']\n})\nexport class SavedQueriesComponent implements OnInit {\n\n  list: Array<Query>; \n\n  constructor(\n    private savedQueryService: SavedQueryService,\n    private blacklistService: BlacklistService\n  ) { }\n\n  ngOnInit() {\n    this.loadAll();\n  }\n\n  remove(query: Query) {\n    this.savedQueryService.remove(query).subscribe(\n      (data) => {\n        this.loadAll();\n      }\n    );\n  }\n\n  search(query: Query) {\n    this.blacklistService.all().subscribe(\n      (blacklist) => {\n        query.build(blacklist);\n        chrome.windows.create({\n          url: query.url,\n          incognito: query.incognito\n        });\n      }\n    );\n  }\n\n  load(query: Query) {\n    \n  }\n\n  private loadAll() {\n    this.savedQueryService.all().subscribe(\n      (data) => {\n        this.list = data;\n      },\n      (error) => {}\n    );\n  }\n}\n","export class Blacklist {\n  url: string;\n  isDefault: boolean;\n\n  constructor(url: string, isDefault: boolean = true) {\n    this.url = url;\n    this.isDefault = isDefault;\n  }\n}\n","import { Blacklist } from \"./blacklist\";\nimport { QueryType } from \"./query-type\";\n\nexport class QueryBuilder {\n  private server: string = \"https://www.google.com/\";\n  private path: string = \"search\"\n\n  private query: string;\n  private queryType: QueryType;\n  private alternative: boolean;\n  private quoted: boolean;\n\n  private blacklist: Array<Blacklist>;\n\n  constructor(query: string, queryType: QueryType, alternative: boolean, quoted: boolean, blacklist: Array<Blacklist>) {\n    this.query = query;\n    this.queryType = queryType;\n    this.alternative = alternative;\n    this.quoted = quoted;\n    this.blacklist = blacklist;\n  }\n\n  url() {\n    return `${this.server}${this.path}?q=${encodeURIComponent(this.buildQuery())}`;\n  }\n\n  humanReadable() {\n    return this.buildQuery();\n  }\n\n  private buildQuery() {\n    let queryString: string = \"\";\n    \n    if(this.alternative) {\n      queryString = \"\\\"parent directory\\\" \";\n    } else {\n      queryString = \"intitle:\\\"index.of\\\" \";\n    }\n\n    if(this.quoted) {\n      queryString += ` \"${this.query}\" `;\n    } else {\n      queryString += this.query;\n    }\n\n    queryString += \" -html -htm -php -asp -jsp \";\n\n    this.blacklist.forEach((item) => {\n      queryString += ` -${item.url} `\n    });\n\n    return ` ${queryString}${this.buildExtensions()} `;\n  }\n\n  private buildExtensions() {\n    if(this.queryType.extensions.length == 0) { return \"\"; }\n    else { \n      return ` (${this.queryType.extensions.join(\"|\")}) `;\n    }\n  }\n}\n","export class QueryType {\n  label: string;\n  extensions: Array<string>;\n  isDefault: boolean;\n\n  constructor(label: string, extensions: Array<string>, isDefault: boolean = true) {\n    this.label = label;\n    this.extensions = extensions;\n    this.isDefault = isDefault;\n  }\n}\n","import { QueryBuilder } from \"./query-builder\";\nimport { Blacklist } from \"./blacklist\";\nimport { QueryType } from \"./query-type\";\n\nexport class Query {\n  query: string = \"\";\n  queryType: QueryType;\n  alternative: boolean = false;\n  quoted: boolean = true;\n  incognito: boolean = true;\n\n  humanReadable: string = \"\";\n  url: string = \"\";\n  \n  constructor() {}\n\n  clear() {\n    this.query = \"\";\n    this.queryType = null;\n    this.humanReadable = \"\";\n  }\n\n  build(blacklist: Array<Blacklist>) {\n    let queryBuilder: QueryBuilder = new QueryBuilder(\n      this.query,\n      this.queryType,\n      this.alternative,\n      this.quoted,\n      blacklist\n    );\n\n    this.humanReadable = queryBuilder.humanReadable();\n    this.url = queryBuilder.url();\n  }\n\n  fromData(data: any) {\n    this.query = data.query;\n    this.queryType = new QueryType(data.queryType.label, data.queryType.extensions);\n    this.alternative = data.alternative;\n    this.quoted = data.quoted;\n    this.incognito = data.incognito;\n  }\n\n  toHash() {\n    return {\n      query: this.query,\n      queryType: {label: this.queryType.label, extensions: this.queryType.extensions},\n      alternative: this.alternative,\n      quoted: this.quoted,\n      incognito: this.incognito\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\";\n\nimport { ChromeStorageService } from \"./chrome-storage.service\";\nimport { Blacklist } from \"../models/blacklist\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlacklistService {\n  private key: string= \"blacklist\";  \n\n  constructor(\n    private chromeStorageService: ChromeStorageService\n  ) { }\n\n  all(): Observable<Array<Blacklist>> {\n    return new Observable((observer) => {\n      let list: Array<Blacklist> = this.defaultList();\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          data.forEach((item) => {\n            list.push(new Blacklist(item, false));\n          });\n          observer.next(list);\n        },\n        (error) => observer.next([])\n      );\n    });\n  }\n\n  save(url: string): Observable<boolean>  {\n    return new Observable((observer) => {\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          data.push(url);\n          this.chromeStorageService.set(this.key, data).subscribe(\n            (result) => { observer.next(true) },\n            (error) => { observer.next(false) }\n          );\n        },\n        (error) => { observer.next(false) }\n      );\n    });\n  }\n\n  remove(blacklist: Blacklist): Observable<boolean> {\n    return new Observable((observer) => {\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          data.splice(data.indexOf(blacklist.url), 1);\n          this.chromeStorageService.set(this.key, data).subscribe(\n            (result) => { observer.next(true) },\n            (error) => { observer.next(false) }\n          );\n        },\n        (error) => { observer.next(false); }\n      );\n    });\n  }\n\n  private defaultList(): Array<Blacklist> {\n    let list: Array<Blacklist> = new Array<Blacklist>();\n    list.push(new Blacklist(\"watchtheshows.com\"));\n    list.push(new Blacklist(\"mmnt.net\"));\n    list.push(new Blacklist(\"listen77.com\"));\n    list.push(new Blacklist(\"unknownsecret.info\"));\n    list.push(new Blacklist(\"trimediacentral.com\"));\n    list.push(new Blacklist(\"wallywashis.name\"));\n    list.push(new Blacklist(\"ch0c.com\"));\n    list.push(new Blacklist(\"hypem.com\"));\n    list.push(new Blacklist(\"www.mkvtvseries.com\"));\n    list.push(new Blacklist(\"www.dlfox.xyz\"));\n    return list;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class ChromeStorageService {\n  constructor() { }\n\n  get(key: string): Observable<Array<any>> {\n    return new Observable((observer) => {\n      let storageData = localStorage.getItem(key);\n      if(storageData != null) {\n        let data = JSON.parse(storageData);\n        observer.next(data);\n      } else {\n        observer.next([]);\n      }\n    });\n  }\n\n  set(key: string, storageData: any): Observable<boolean> {\n    return new Observable((observer) => {\n      try {\n        localStorage.setItem(key, JSON.stringify(storageData));\n        observer.next(true);\n      } catch(_) {\n        observer.next(false);\n      }\n    });\n  }\n\n  clear(key: string): Observable<boolean> {\n    return new Observable((observer) => {\n      localStorage.removeItem(key);\n      observer.next(true);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\";\n\nimport { ChromeStorageService } from \"./chrome-storage.service\";\nimport { QueryType } from \"../models/query-type\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryTypeService {\n  private key: string= \"query-type\";  \n\n  constructor(\n    private chromeStorageService: ChromeStorageService\n  ) { }\n\n  all(): Observable<Array<QueryType>> {\n    return new Observable((observer) => {\n      let list: Array<QueryType> = this.defaultList();\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          data.forEach((item) => {\n            list.push(new QueryType(item.label, item.extensions, false));\n          });\n          observer.next(list);\n        },\n        (error) => observer.next([])\n      );\n    });\n  }\n\n  save(label: string, extensions: Array<string>): Observable<boolean>  {\n    return new Observable((observer) => {\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          data.push({label: label, extensions: extensions});\n          this.chromeStorageService.set(this.key, data).subscribe(\n            (result) => { observer.next(true) },\n            (error) => { observer.next(false) }\n          );\n        },\n        (error) => { observer.next(false) }\n      );\n    });\n  }\n\n  remove(queryType: QueryType): Observable<boolean> {\n    return new Observable((observer) => {\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          let index = -1;\n          data.forEach((item, idx) => {\n            if(item.label == queryType.label) { index = idx; }\n          });\n          if(index != -1) { data.splice(index, 1); }          \n          this.chromeStorageService.set(this.key, data).subscribe(\n            (result) => { observer.next(true) },\n            (error) => { observer.next(false) }\n          );\n        },\n        (error) => { observer.next(false); }\n      );\n    });\n  }\n\n  private defaultList(): Array<QueryType> {\n    let list: Array<QueryType> = new Array<QueryType>();\n    list.push(new QueryType(\"Movies\", [\"avi\", \"mp4\", \"mkv\", \"vob\", \"divx\"]));\n    list.push(new QueryType(\"Music\", [\"mp3\", \"flac\", \"aac\"]));\n    list.push(new QueryType(\"Books\", [\"pdf\", \"epub\", \"mob\"]));\n    list.push(new QueryType(\"Mac Software\", [\"dmg\", \"sit\"]));\n    list.push(new QueryType(\"General\", []));\n    return list;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\";\n\nimport { ChromeStorageService } from \"./chrome-storage.service\";\nimport { Query } from \"../models/query\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SavedQueryService {\n  private key: string= \"saved-query\";  \n\n  constructor(\n    private chromeStorageService: ChromeStorageService\n  ) { }\n\n  all(): Observable<Array<Query>> {\n    return new Observable((observer) => {\n      let list: Array<Query> = new Array<Query>();\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          data.forEach((item) => {\n            let query: Query = new Query();\n            query.fromData(item);\n            list.push(query);\n          });\n          observer.next(list);\n        },\n        (error) => observer.next([])\n      );\n    });\n  }\n\n  save(query: Query): Observable<boolean>  {\n    return new Observable((observer) => {\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          data.push(query.toHash());\n          this.chromeStorageService.set(this.key, data).subscribe(\n            (result) => { observer.next(true) },\n            (error) => { observer.next(false) }\n          );\n        },\n        (error) => { observer.next(false) }\n      );\n    });\n  }\n\n  remove(query: Query): Observable<boolean> {\n    return new Observable((observer) => {\n      this.chromeStorageService.get(this.key).subscribe(\n        (data) => {\n          let index = -1;\n          data.forEach((item, idx) => {\n            if(item.query == query.query) { index = idx; }\n          });\n          if(index != -1) { data.splice(index, 1); }          \n          this.chromeStorageService.set(this.key, data).subscribe(\n            (result) => { observer.next(true) },\n            (error) => { observer.next(false) }\n          );\n        },\n        (error) => { observer.next(false); }\n      );\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}